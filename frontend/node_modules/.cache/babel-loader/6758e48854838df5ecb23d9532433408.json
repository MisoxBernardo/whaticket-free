{"ast":null,"code":"var _jsxFileName = \"/home/user/whaticket-free/frontend/src/components/TagsContainer/index.js\";\nimport { Chip, Paper, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useState } from \"react\";\nimport { isArray, isString } from \"lodash\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\nexport function TagsContainer({\n  ticket\n}) {\n  const [tags, setTags] = useState([]);\n  const [selecteds, setSelecteds] = useState([]);\n  useEffect(() => {\n    if (ticket) {\n      async function fetchData() {\n        await loadTags();\n        if (Array.isArray(ticket.tags)) {\n          setSelecteds(ticket.tags);\n        }\n      }\n      fetchData();\n    }\n  }, [ticket]);\n  const createTag = async data => {\n    try {\n      const {\n        data: responseData\n      } = await api.post(`/tags`, data);\n      return responseData;\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  const loadTags = async () => {\n    try {\n      const {\n        data\n      } = await api.get(`/tags/list`);\n      setTags(data);\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  const syncTags = async data => {\n    try {\n      const {\n        data: responseData\n      } = await api.post(`/tags/sync`, data);\n      return responseData;\n    } catch (err) {\n      toastError(err);\n    }\n  };\n  const onChange = async (value, reason) => {\n    let optionsChanged = [];\n    if (reason === 'create-option') {\n      if (isArray(value)) {\n        for (let item of value) {\n          if (isString(item)) {\n            const newTag = await createTag({\n              name: item\n            });\n            optionsChanged.push(newTag);\n          } else {\n            optionsChanged.push(item);\n          }\n        }\n      }\n      await loadTags();\n    } else {\n      optionsChanged = value;\n    }\n    setSelecteds(optionsChanged);\n    await syncTags({\n      ticketId: ticket.id,\n      tags: optionsChanged\n    });\n  };\n  return /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    size: \"small\",\n    options: tags,\n    value: selecteds,\n    freeSolo: true,\n    onChange: (e, v, r) => onChange(v, r),\n    getOptionLabel: option => option.name,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      style: {\n        backgroundColor: option.color || '#eee',\n        textShadow: '1px 1px 1px #000',\n        color: 'white'\n      },\n      label: option.name\n    }, getTagProps({\n      index\n    }), {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }))),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      placeholder: \"Tags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    })),\n    PaperComponent: ({\n      children\n    }) => /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        width: 400,\n        marginLeft: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, children),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"names":["Chip","Paper","TextField","Autocomplete","React","useEffect","useState","isArray","isString","toastError","api","TagsContainer","ticket","tags","setTags","selecteds","setSelecteds","fetchData","loadTags","Array","createTag","data","responseData","post","err","get","syncTags","onChange","value","reason","optionsChanged","item","newTag","name","push","ticketId","id","createElement","style","padding","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","multiple","size","options","freeSolo","e","v","r","getOptionLabel","option","renderTags","getTagProps","map","index","Object","assign","variant","backgroundColor","color","textShadow","label","renderInput","params","placeholder","PaperComponent","children","width","marginLeft"],"sources":["/home/user/whaticket-free/frontend/src/components/TagsContainer/index.js"],"sourcesContent":["import { Chip, Paper, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useState } from \"react\";\nimport { isArray, isString } from \"lodash\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nexport function TagsContainer ({ ticket }) {\n\n    const [tags, setTags] = useState([]);\n    const [selecteds, setSelecteds] = useState([]);\n\n    useEffect(() => {\n        if (ticket) {\n            async function fetchData () {\n                await loadTags();\n                if (Array.isArray(ticket.tags)) {\n                    setSelecteds(ticket.tags);\n                }\n            }\n            fetchData();\n        }\n    }, [ticket]);\n\n    const createTag = async (data) => {\n        try {\n            const { data: responseData } = await api.post(`/tags`, data);\n            return responseData;\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const loadTags = async () => {\n        try {\n            const { data } = await api.get(`/tags/list`);\n            setTags(data);\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const syncTags = async (data) => {\n        try {\n            const { data: responseData } = await api.post(`/tags/sync`, data);\n            return responseData;\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const onChange = async (value, reason) => {\n        let optionsChanged = []\n        if (reason === 'create-option') {\n            if (isArray(value)) {\n                for (let item of value) {\n                    if (isString(item)) {\n                        const newTag = await createTag({ name: item })\n                        optionsChanged.push(newTag);\n                    } else {\n                        optionsChanged.push(item);\n                    }\n                }\n            }\n            await loadTags();\n        } else {\n            optionsChanged = value;\n        }\n        setSelecteds(optionsChanged);\n        await syncTags({ ticketId: ticket.id, tags: optionsChanged });\n    }\n\n    return (\n        <Paper style={{padding: 12}}>\n            <Autocomplete\n                multiple\n                size=\"small\"\n                options={tags}\n                value={selecteds}\n                freeSolo\n                onChange={(e, v, r) => onChange(v, r)}\n                getOptionLabel={(option) => option.name}\n                renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                        <Chip\n                            variant=\"outlined\"\n                            style={{backgroundColor: option.color || '#eee', textShadow: '1px 1px 1px #000', color: 'white'}}\n                            label={option.name}\n                            {...getTagProps({ index })}\n                            size=\"small\"\n                        />\n                    ))\n                }\n                renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" placeholder=\"Tags\" />\n                )}\n                PaperComponent={({ children }) => (\n                    <Paper style={{width: 400, marginLeft: 12}}>\n                        {children}\n                    </Paper>\n                )}\n            />\n        </Paper>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}