{"ast":null,"code":"import{Chip,Paper,TextField}from\"@material-ui/core\";import Autocomplete from\"@material-ui/lab/Autocomplete\";import React,{useEffect,useState}from\"react\";import toastError from\"../../errors/toastError\";import api from\"../../services/api\";export function TagsFilter(_ref){let{onFiltered}=_ref;const[tags,setTags]=useState([]);const[selecteds,setSelecteds]=useState([]);useEffect(()=>{async function fetchData(){await loadTags();}fetchData();},[]);const loadTags=async()=>{try{const{data}=await api.get(\"/tags/list\");setTags(data);}catch(err){toastError(err);}};const onChange=async value=>{setSelecteds(value);onFiltered(value);};return/*#__PURE__*/React.createElement(Paper,{style:{padding:10}},/*#__PURE__*/React.createElement(Autocomplete,{multiple:true,size:\"small\",options:tags,value:selecteds,onChange:(e,v,r)=>onChange(v),getOptionLabel:option=>option.name,renderTags:(value,getTagProps)=>value.map((option,index)=>/*#__PURE__*/React.createElement(Chip,Object.assign({variant:\"outlined\",style:{backgroundColor:option.color||'#eee',textShadow:'1px 1px 1px #000',color:'white'},label:option.name},getTagProps({index}),{size:\"small\"}))),renderInput:params=>/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{variant:\"outlined\",placeholder:\"Filtro por Tags\"}))}));}","map":{"version":3,"names":["Chip","Paper","TextField","Autocomplete","React","useEffect","useState","toastError","api","TagsFilter","_ref","onFiltered","tags","setTags","selecteds","setSelecteds","fetchData","loadTags","data","get","err","onChange","value","createElement","style","padding","multiple","size","options","e","v","r","getOptionLabel","option","name","renderTags","getTagProps","map","index","Object","assign","variant","backgroundColor","color","textShadow","label","renderInput","params","placeholder"],"sources":["/home/user/whaticket-free/frontend/src/components/TagsFilter/index.js"],"sourcesContent":["import { Chip, Paper, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useState } from \"react\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nexport function TagsFilter ({ onFiltered }) {\n\n    const [tags, setTags] = useState([]);\n    const [selecteds, setSelecteds] = useState([]);\n\n    useEffect(() => {\n        async function fetchData () {\n            await loadTags();\n        }\n        fetchData();\n    }, []);\n\n    const loadTags = async () => {\n        try {\n            const { data } = await api.get(`/tags/list`);\n            setTags(data);\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const onChange = async (value) => {\n        setSelecteds(value);\n        onFiltered(value);\n    }\n\n    return (\n        <Paper style={{padding: 10}}>\n            <Autocomplete\n                multiple\n                size=\"small\"\n                options={tags}\n                value={selecteds}\n                onChange={(e, v, r) => onChange(v)}\n                getOptionLabel={(option) => option.name}\n                renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                        <Chip\n                            variant=\"outlined\"\n                            style={{backgroundColor: option.color || '#eee', textShadow: '1px 1px 1px #000', color: 'white'}}\n                            label={option.name}\n                            {...getTagProps({ index })}\n                            size=\"small\"\n                        />\n                    ))\n                }\n                renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" placeholder=\"Filtro por Tags\" />\n                )}\n            />\n        </Paper>\n    )\n}"],"mappings":"AAAA,OAASA,IAAI,CAAEC,KAAK,CAAEC,SAAS,KAAQ,mBAAmB,CAC1D,MAAO,CAAAC,YAAY,KAAM,+BAA+B,CACxD,MAAO,CAAAC,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,GAAG,KAAM,oBAAoB,CAEpC,MAAO,SAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAkB,IAAhB,CAAEC,UAAW,CAAC,CAAAD,IAAA,CAEtC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACQ,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE9CD,SAAS,CAAC,IAAM,CACZ,cAAe,CAAAW,SAASA,CAAA,CAAI,CACxB,KAAM,CAAAC,QAAQ,CAAC,CAAC,CACpB,CACAD,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAA,GAAY,CACzB,GAAI,CACA,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAV,GAAG,CAACW,GAAG,aAAa,CAAC,CAC5CN,OAAO,CAACK,IAAI,CAAC,CACjB,CAAE,MAAOE,GAAG,CAAE,CACVb,UAAU,CAACa,GAAG,CAAC,CACnB,CACJ,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,KAAK,EAAK,CAC9BP,YAAY,CAACO,KAAK,CAAC,CACnBX,UAAU,CAACW,KAAK,CAAC,CACrB,CAAC,CAED,mBACIlB,KAAA,CAAAmB,aAAA,CAACtB,KAAK,EAACuB,KAAK,CAAE,CAACC,OAAO,CAAE,EAAE,CAAE,eACxBrB,KAAA,CAAAmB,aAAA,CAACpB,YAAY,EACTuB,QAAQ,MACRC,IAAI,CAAC,OAAO,CACZC,OAAO,CAAEhB,IAAK,CACdU,KAAK,CAAER,SAAU,CACjBO,QAAQ,CAAEA,CAACQ,CAAC,CAAEC,CAAC,CAAEC,CAAC,GAAKV,QAAQ,CAACS,CAAC,CAAE,CACnCE,cAAc,CAAGC,MAAM,EAAKA,MAAM,CAACC,IAAK,CACxCC,UAAU,CAAEA,CAACb,KAAK,CAAEc,WAAW,GAC3Bd,KAAK,CAACe,GAAG,CAAC,CAACJ,MAAM,CAAEK,KAAK,gBACpBlC,KAAA,CAAAmB,aAAA,CAACvB,IAAI,CAAAuC,MAAA,CAAAC,MAAA,EACDC,OAAO,CAAC,UAAU,CAClBjB,KAAK,CAAE,CAACkB,eAAe,CAAET,MAAM,CAACU,KAAK,EAAI,MAAM,CAAEC,UAAU,CAAE,kBAAkB,CAAED,KAAK,CAAE,OAAO,CAAE,CACjGE,KAAK,CAAEZ,MAAM,CAACC,IAAK,EACfE,WAAW,CAAC,CAAEE,KAAM,CAAC,CAAC,EAC1BX,IAAI,CAAC,OAAO,EACf,CACJ,CACJ,CACDmB,WAAW,CAAGC,MAAM,eAChB3C,KAAA,CAAAmB,aAAA,CAACrB,SAAS,CAAAqC,MAAA,CAAAC,MAAA,IAAKO,MAAM,EAAEN,OAAO,CAAC,UAAU,CAACO,WAAW,CAAC,iBAAiB,EAAE,CAC3E,CACL,CACE,CAAC,CAEhB","ignoreList":[]},"metadata":{},"sourceType":"module"}