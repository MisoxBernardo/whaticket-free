{"ast":null,"code":"import{useState,useEffect}from\"react\";import{getHoursCloseTicketsAuto}from\"../../config\";import toastError from\"../../errors/toastError\";import api from\"../../services/api\";const useTickets=_ref=>{let{searchParam,pageNumber,status,date,showAll,queueIds,withUnreadMessages,tags}=_ref;const[loading,setLoading]=useState(true);const[hasMore,setHasMore]=useState(false);const[tickets,setTickets]=useState([]);const[count,setCount]=useState(0);useEffect(()=>{setLoading(true);const delayDebounceFn=setTimeout(()=>{const fetchTickets=async()=>{try{const{data}=await api.get(\"/tickets\",{params:{searchParam,pageNumber,status,date,showAll,queueIds,withUnreadMessages,tags}});setTickets(data.tickets);let horasFecharAutomaticamente=getHoursCloseTicketsAuto();if(status===\"open\"&&horasFecharAutomaticamente&&horasFecharAutomaticamente!==\"\"&&horasFecharAutomaticamente!==\"0\"&&Number(horasFecharAutomaticamente)>0){let dataLimite=new Date();dataLimite.setHours(dataLimite.getHours()-Number(horasFecharAutomaticamente));data.tickets.forEach(ticket=>{if(ticket.status!==\"closed\"){let dataUltimaInteracaoChamado=new Date(ticket.updatedAt);if(dataUltimaInteracaoChamado<dataLimite)closeTicket(ticket);}});}setHasMore(data.hasMore);setCount(data.count);setLoading(false);}catch(err){setLoading(false);toastError(err);}};const closeTicket=async ticket=>{await api.put(\"/tickets/\".concat(ticket.id),{status:\"closed\",userId:ticket.userId||null});};fetchTickets();},500);return()=>clearTimeout(delayDebounceFn);},[searchParam,pageNumber,status,date,showAll,queueIds,withUnreadMessages,tags]);return{tickets,loading,hasMore,count};};export default useTickets;","map":{"version":3,"names":["useState","useEffect","getHoursCloseTicketsAuto","toastError","api","useTickets","_ref","searchParam","pageNumber","status","date","showAll","queueIds","withUnreadMessages","tags","loading","setLoading","hasMore","setHasMore","tickets","setTickets","count","setCount","delayDebounceFn","setTimeout","fetchTickets","data","get","params","horasFecharAutomaticamente","Number","dataLimite","Date","setHours","getHours","forEach","ticket","dataUltimaInteracaoChamado","updatedAt","closeTicket","err","put","concat","id","userId","clearTimeout"],"sources":["/home/user/whaticket-free/frontend/src/hooks/useTickets/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getHoursCloseTicketsAuto } from \"../../config\";\nimport toastError from \"../../errors/toastError\";\n\nimport api from \"../../services/api\";\n\nconst useTickets = ({\n    searchParam,\n    pageNumber,\n    status,\n    date,\n    showAll,\n    queueIds,\n    withUnreadMessages,\n    tags,\n}) => {\n    const [loading, setLoading] = useState(true);\n    const [hasMore, setHasMore] = useState(false);\n    const [tickets, setTickets] = useState([]);\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        setLoading(true);\n        const delayDebounceFn = setTimeout(() => {\n            const fetchTickets = async() => {\n                try {\n                    const { data } = await api.get(\"/tickets\", {\n                        params: {\n                            searchParam,\n                            pageNumber,\n                            status,\n                            date,\n                            showAll,\n                            queueIds,\n                            withUnreadMessages,\n                            tags,\n                        },\n                    })\n                    setTickets(data.tickets)\n\n                    let horasFecharAutomaticamente = getHoursCloseTicketsAuto(); \n\n                    if (status === \"open\" && horasFecharAutomaticamente && horasFecharAutomaticamente !== \"\" &&\n                        horasFecharAutomaticamente !== \"0\" && Number(horasFecharAutomaticamente) > 0) {\n\n                        let dataLimite = new Date()\n                        dataLimite.setHours(dataLimite.getHours() - Number(horasFecharAutomaticamente))\n\n                        data.tickets.forEach(ticket => {\n                            if (ticket.status !== \"closed\") {\n                                let dataUltimaInteracaoChamado = new Date(ticket.updatedAt)\n                                if (dataUltimaInteracaoChamado < dataLimite)\n                                    closeTicket(ticket)\n                            }\n                        })\n                    }\n\n                    setHasMore(data.hasMore)\n                    setCount(data.count)\n                    setLoading(false)\n                } catch (err) {\n                    setLoading(false)\n                    toastError(err)\n                }\n            }\n\n            const closeTicket = async(ticket) => {\n                await api.put(`/tickets/${ticket.id}`, {\n                    status: \"closed\",\n                    userId: ticket.userId || null,\n                })\n            }\n\n            fetchTickets()\n        }, 500)\n        return () => clearTimeout(delayDebounceFn)\n    }, [\n        searchParam,\n        pageNumber,\n        status,\n        date,\n        showAll,\n        queueIds,\n        withUnreadMessages,\n        tags,\n    ])\n\n    return { tickets, loading, hasMore, count };\n};\n\nexport default useTickets;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}